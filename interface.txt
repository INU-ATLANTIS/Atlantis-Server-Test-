https://www.notion.so/REST-API-f9cc044ba3e44645b35621909e33c49f?pvs=4

========================================

signIn(로그인)

- request
{
    *email : String,
    *password : String
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
    token: "jwt...",
    expiredDate: 123456789
}

실패

-필수 정보 미 입력

-로그인 실패
Http Status - 401 (Unauthorized 인증 실패)
{
    code: "SF",
    message: "Sing In Failed."
}

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

singUp(회원가입)

-request
{
    *email: String,
    *password: String,
    nickname: String
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

-이메일 중복
Http Status - 400 (Bad Request)
{
    code: "EE",
    message: "Existed Email."
}

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================


weeklyTop(주간 인기 게시물)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
    top3List: BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: string,
    content: string,
    favoriteCount: int,
    commentCount: int,
    writeDatetime: string,
    writerNickname: string,

}

실패

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}
========================================

currentList (최신 게시물)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
    currentList: BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: string,
    content: string,
    favoriteCount: int,
    commentCount: int,
    writeDatetime: string,
    writerNickname: string,

}

실패

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

searchList (검색 게시물 리스트)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
    searchList: BoardListItem[]
}

BoardListItem
{
    boardNumber: int,
    title: string,
    content: string,
    favoriteCount: int,
    commentCount: int,
    writeDatetime: string,
    writerNickname: string,

}

실패

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}
========================================

boardDetail (게시물 상세 정보)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success.",
    boardNumber: int,
    title: string,
    content: string,
    favoriteCount: int,
    commentCount: int,
    writeDatetime: string,
    writerNickname: string,
}

실패

- 존재하지 않는 게시물

Http status - 400 (Bad Request)
{
    code: "NB",
    message: "No Existed Board Number."
}
========================================

putFavoirte (좋아요 기능)

- request

{
    boardNumber: int
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

commentList (댓글 리스트)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success.",
    commentList: commentListItem[]
}

commentListItem
{
    nickname: string,
    createDatetime: string,
    conetent: string,
    favoriteCount: int,
}

실패

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

postComment (댓글 쓰기)

- request
{
    content: string
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

- 존재하지 않는 게시물
Http status - 400 (Bad Request)
{
    code: "NB",
    message: "No Existed Board."
}


- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}


- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

boardDelete (게시물 삭제 기능)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

- 존재하지 않는 게시물
Http status - 400 (Bad Request)
{
    code: "NB",
    message: "No Existed Board."
}


- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}

- 권한 없음
Http status - 403 (Forbiden)
{
    code: "NP",
    message: "NO Permission."
}

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

boardUpdate (게시물 작성 기능)

- request
{
    *title: string,
    *content: string,
    marker: marker
}

marker
{
    markerId: int,
    userId: int,
    x: DECIMAL,
    y: DECIMAL,
    detail : string,
    createDatetime: string
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

- 존재하지 않는 게시물
Http status - 400 (Bad Request)
{
    code: "NB",
    message: "No Existed Board."
}


- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}

- 권한 없음
Http status - 403 (Forbiden)
{
    code: "NP",
    message: "NO Permission."
}

- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

boardWrite (게시물 수정 기능)

- request
{
    *title: string,
    *content: string,
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}

실패

- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}


- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

postComment (댓글 쓰기)


- request
{
    *content: string,
}

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
}


실패

- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}


- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================

getUser (유저 정보 불러오기)

- response

성공

Http status - 200 (OK)
{
    Code: "SU",
    Message: "Success."
    nickname: string
}

실패

- 존재하지 않는 유저
Http status - 400 (Bad Request)
{
    code: "NU",
    message: "NO Existed User."
}


- 데이터베이스 에러
Http status - 500 (Internal Server error)
{
    code: "DE",
    message: "Database Error."
}

========================================



